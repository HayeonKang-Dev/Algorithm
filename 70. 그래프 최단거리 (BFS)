#include <stdio.h>
#include <stdlib.h> 
#include <vector> // 동적 할당 
#include <algorithm> // abs 
#include <queue>
using namespace std;  

// 그래프 최단거리(BFS: Breadth First Search) 
int ch[30], dis[30]; // ch: 방문 여부 체크 배열 dis: 1에서 각 노드로 가는 최단거리  
 
int main(){
	freopen("input.txt", "rt", stdin);
	int n, m, a, b, x, i;
	vector<int> map[30];
	queue<int> Q;  
	scanf("%d %d",  &n, &m);
	for(i=1; i<=m; i++){
		scanf("%d %d", &a, &b);
		map[a].push_back(b);
	} 
	
	// BFS 탐색
	Q.push(1);
	ch[1] = 1; 
	while(!Q.empty()){
		x = Q.front(); // Q의 첫번째 값 얻기 (pop 아님) 
		Q.pop(); // 첫번째 값 삭제 
		 
		for(i=0; i<map[x].size(); i++){ // x와 연결된 노드 
			if(ch[map[x][i]] == 0){ // 아직 방문 안한 노드면 
				ch[map[x][i]] = 1; // 방문했다고 표기
				Q.push(map[x][i]); // 큐에 넣기 
				dis[map[x][i]] = dis[x] + 1; // 거리 값 넣기. dis[x]를 거쳐서 가는거니까 dis[x]에 1 더한 값으로 입력  
			}
		} 
	}
	for(i=2; i<=n; i++){
		printf("%d : %d\n", i, dis[i]);
	} 
	return 0;
} 
