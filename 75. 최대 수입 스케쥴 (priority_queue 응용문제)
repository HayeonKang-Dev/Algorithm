#include <stdio.h>
#include <iostream>
#include <stdlib.h> 
#include <vector> // 동적 할당 
#include <algorithm> // abs 
#include <queue>
using namespace std;  

// 구조체 (money, when이 쌍으로)  
struct Data{
	int money; 
	int when; 
	// 생성자  
	Data(int a, int b){
		money = a; 
		when = b;
	}
	bool operator<(Data &b){ // 정렬 기준 설정  
		return when>b.when; // when이 큰 순서로 정렬  
	}
}; 

int main(){
	freopen("input.txt", "rt", stdin);
	int n, i, j, a, b, res=0, max=-2147000000;
	vector<Data> T; 
	priority_queue<int> pQ; 
	scanf("%d", &n);
	for(i=1; i<=n; i++){
		scanf("%d %d", &a, &b);
		T.push_back(Data(a, b));
		if(b>max) // 날짜 중 가장 큰 날짜 찾기  
			max=b;	// max=  마지막 강연할 날짜  
	} 
	
	sort(T.begin(), T.end());
	j=0; 
	for(i=max; i>=1; i--){// 3일째부터 1일째 강의 스케쥴링  
		for( ; j<n; j++){ // i 날짜에 할 수 있는 강의 pQ에 적재  
			if(T[j].when<i) break; // 벡터에 있는 강연들의 제한 날짜가 i보다 작으면 pQ에 넣지 않기   
			pQ.push(T[j].money);
		}
		// 큐가 비어있지 않으면  
		if(!pQ.empty()){
			res += pQ.top(); // 가장 큰 값을 res에 더해주기  
			pQ.pop(); // 강연하기로 했으니까 pQ에서 제거  
		}
	}
	printf("%d\n", res);
	return 0;
} 
