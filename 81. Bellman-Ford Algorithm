int dist[101];
struct Edge{
	int s;
	int e;
	int val; 
	Edge(int a, int b, int c){
		s = a; 
		e = b; 
		val = c; 
	}
};
int main(){
	freopen("input.txt", "rt", stdin);
	vector<Edge> Ed;
	int i, n, m, a, b, c, j, s, e;
	scanf("%d %d", &n, &m);
	for(i=1; i<=m; i++){
		scanf("%d %d %d", &a, &b, &c);
		Ed.push_back(Edge(a, b, c));
	}
	for(i=1; i<=n; i++){
		dist[i] = 2147000000;
	}
	
	scanf("%d %d", &s, &e); // start end
	dist[s] = 0;
	// bellman-ford (1~n-1)
	for(i=1; i<n; i++){
		for(j=0; j<Ed.size(); j++){
			int u=Ed[j].s; // 출발 노드  
			int v=Ed[j].e; // 도착 노드  
			int w=Ed[j].val; // 가중치  
			if(dist[u]!=2147000000 && dist[u]+w < dist[v]){ // 비용 갱신한 값이 기존의 비용보다 작으면 갱신  
				dist[v] = dist[u]+w;
			}
		}
	}
	// 음수 사이클 판단  
	for(j=0; j<Ed.size(); j++){
		int u=Ed[j].s;
		int v=Ed[j].e;
		int w=Ed[j].val;
		if(dist[u]!=2147000000 && dist[u]+w < dist[v]){
			printf("-1\n");
			exit(0);
		}
	}
	printf("%d\n", dist[e]);
	return 0; 
}  
