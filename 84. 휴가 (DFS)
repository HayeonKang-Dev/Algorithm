#include <stdio.h>
#include <string.h>
#include <stdlib.h> 
#include <vector> // 동적 할당 
#include <algorithm> // abs 
#include <stack>
#include <math.h>
#include <queue>
#include <iostream> 
using namespace std;
// n: 상담 진행 일 (n+1 일째에 휴가를 떠남)  
int n, res=-2147000000;
vector<int> T, P; // 상담에 걸리는 일수 T, 상담 보수 P  
void DFS(int L, int sum){
	if(L==n+1){ // 휴가 떠나는 날 
		if(sum>res) res=sum; // 보수 다 더한 값이 res보다 크면 갱신  
	}
	else{ // 아직 휴가 가기 전   
		if(L+T[L] <= n+1) DFS(L+T[L], sum+P[L]); // 상담 진행  
		DFS(L+1, sum); // 상담 미진행  
	}
}
int main(){
	ios_base::sync_with_stdio(false);
	freopen("input.txt", "rt", stdin);
	int a, b;
	cin>>n; 
	T.push_back(0);
	P.push_back(0);
	for(int i=0; i<n; i++){
		cin>>a>>b;
		T.push_back(a);
		P.push_back(b);
	}
	DFS(1, 0);
	cout<<res;
	return 0; 
}  
