#include <stdio.h>
#include <stdlib.h> 
#include <vector> // 동적 할당 
#include <algorithm> // abs 
using namespace std;
int a[1001], n; // 전역변수 선언  

// 이분검색 - 결정 알고리즘   
	
int Count(int len, int x[]){ // 들어갈 수 있는 말의 수 세는 함수 len=mid, x[]=마구간 좌표 배열 
	int i, cnt=1, pos=x[1];
 	for(i=2; i<=n; i++){
 		if(x[i]-pos>=len){ // 특정 마구간 좌표- 이전 말이 위치해있는 좌표가 mid보다 크거나 같으면  
 			cnt++; // 말 수 하나 추가  
 			pos=x[i]; // pos를 최근 말 추가한 곳의 좌표로 업데이트  
		}
	}
	return cnt; // 최대 거리 mid에 대해 마구간에 들어갈 수 있는 말의 최대 수   
}
 
int main(){
	freopen("input.txt", "rt", stdin);
	int m, i, lt=1, rt, mid, res;
	scanf("%d %d", &n, &m); // n:마구간 위치, m: 말 수  
	int *x = new int[n+1]; // 동적 할당 -> n+1개 배열  
	for(i=1; i<=n; i++){
		scanf("%d", &x[i]);
	}
	sort(x+1, x+n+1); // 1~n 정렬  
	rt=x[n]; // 최대값은 배열의 가장 마지막에 있는 값으로 지정 (마구간의 가장 큰 좌표) 
	while(lt<=rt){
		mid = (lt+rt)/2;
		if(Count(mid, x)>=m){ // 최대 인접 거리가 mid일 때, 들어갈 수 있는 말의 수가 m보다 크거나 같다면  
			res=mid; // res에 mid 저장하고 
			lt=mid+1;  // 범위를 오른쪽으로 이동 (최대 인접거리를 찾아야하니까) 
		}
		else rt=mid-1; // 들어갈 수 있는 말의 수가 m보다 작다면 -> 성립하지 않는 mid이므로, 범위를 더 줄이기  
	}
	printf("%d\n", res);
	delete[] x; // new int에 대한 메모리 해제  
	return 0; 
} 
